{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","characters","myRef","useRef","bodyRef","useState","data","setData","show","setShow","show2","setShow2","seconds","setSeconds","minutes","setMinutes","hours","setHours","charactersCount","setCharacterCount","useEffect","current","parentNode","style","length","window","scrollTo","setTimer","setInterval","prev","clearInterval","fetchData","a","axios","get","console","log","ref","className","Dropdown","Toggle","disabled","variant","id","Menu","Item","href","src","display","onClick","e","offset","getBoundingClientRect","x","pageX","width","y","pageY","height","Math","sqrt","pow","abs","index","indexOf","newList","splice","imageClick","pictures","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f69f8ad.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { Button, Dropdown } from \"react-bootstrap\";\n\nfunction App() {\n  const characters = [\n    [[0.9440962680586654], [0.7610153542858077]],\n    [[0.41841001512790726], [0.6008641432304468]],\n    [[0.028973509933774833], [0.8642858020368801]],\n  ];\n\n  const offset1 = 0.003;\n  const offset2 = 0.03;\n  const offset3 = 0.015;\n\n  const myRef = useRef(null);\n  const bodyRef = useRef(null);\n\n  const [data, setData] = useState([]);\n  const [show, setShow] = useState(true);\n  const [show2, setShow2] = useState(false);\n\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [hours, setHours] = useState(0);\n\n  const [charactersCount, setCharacterCount] = useState([\n    \"ash\",\n    \"neo\",\n    \"stewie\",\n  ]);\n\n  useEffect(() => {\n    if (show || show2) {\n      bodyRef.current.parentNode.parentNode.style = \"overflow-y:hidden\";\n    }\n    else {\n      bodyRef.current.parentNode.parentNode.style = \"overflow-y:scroll\"\n    }\n  }, [show, show2]);\n\n  useEffect(() => {\n    if (charactersCount.length === 0) {\n      setShow2(true);\n      window.scrollTo(0, 0);\n    }\n\n    if (show === false && show2 === false) {\n      const setTimer = setInterval(() => {\n        if (seconds < 59) {\n          setSeconds((prev) => prev + 1);\n        } else {\n          setSeconds(0);\n          setMinutes((prev) => prev + 1);\n        }\n\n        if (minutes >= 59) {\n          setMinutes(0);\n          setHours((prev) => prev + 1);\n        }\n      }, 1000);\n\n      return () => {\n        clearInterval(setTimer);\n      };\n    }\n  });\n\n  const fetchData = async () => {\n    const { data } = await axios.get(\"/api/getting\");\n\n    setData(data[0]);\n  };\n\n  const imageClick = (e) => {\n    var offset = myRef.current.getBoundingClientRect();\n    var x = e.pageX / offset.width;\n    var y = (e.pageY - 50) / offset.height;\n    console.log(x, y);\n\n    // console.log(\n    //   Math.sqrt(\n    //     Math.pow(x - Math.abs(characters[2][0]), 2) +\n    //       Math.pow(y - Math.abs(characters[2][1]), 2)\n    //   )\n    // );\n\n    if (\n      Math.sqrt(\n        Math.pow(x - Math.abs(characters[0][0]), 2) +\n          Math.pow(y - Math.abs(characters[0][1]), 2)\n      ) < offset1\n    ) {\n      console.log(\"found stewie boyyy\");\n\n      let index = charactersCount.indexOf(\"stewie\");\n\n      let newList = charactersCount;\n\n      if (index !== -1 && newList.length > 1) {\n        newList.splice(index, 1);\n\n        setCharacterCount([...newList]);\n      } else if (index !== -1 && newList.length === 1) {\n        setCharacterCount([]);\n        setShow2(true);\n      }\n    }\n    if (\n      Math.sqrt(\n        Math.pow(x - Math.abs(characters[1][0]), 2) +\n          Math.pow(y - Math.abs(characters[1][1]), 2)\n      ) < offset2\n    ) {\n      console.log(\"found neo boyyy\");\n\n      let index = charactersCount.indexOf(\"neo\");\n\n      let newList = charactersCount;\n\n      if (index !== -1 && newList.length > 1) {\n        newList.splice(index, 1);\n        setCharacterCount([...newList]);\n      } else if (index !== -1 && newList.length === 1) {\n        setCharacterCount([]);\n        setShow2(true);\n      }\n    }\n    if (\n      Math.sqrt(\n        Math.pow(x - Math.abs(characters[2][0]), 2) +\n          Math.pow(y - Math.abs(characters[2][1]), 2)\n      ) < offset3\n    ) {\n      console.log(\"found ash boyyy\");\n      let index = charactersCount.indexOf(\"ash\");\n      let newList = charactersCount;\n      if (index !== -1 && newList.length > 1) {\n        newList.splice(index, 1);\n        setCharacterCount([...newList]);\n      } else if (index !== -1 && newList.length === 1) {\n        setCharacterCount([]);\n        setShow2(true);\n      }\n    }\n  };\n\n  const foundAll = () => {\n    return (\n      <div\n        style={show2 ? { display: \"block\" } : { display: \"none\" }}\n        className='modal-2'\n      >\n        <div className='modal-content-2'>\n          <h1>Find Game</h1>\n          <p>Congratulations! You finished in </p>\n          <h2>\n            {hours < 10 ? \"0\" + hours + \":\" : hours + \":\"}\n            {minutes < 10 ? \"0\" + minutes + \":\" : minutes + \":\"}\n            {seconds < 10 ? \"0\" + seconds : seconds}\n          </h2>\n        </div>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    fetchData();\n    console.log(\"fetching data\");\n  }, []);\n\n  const startGame = () => {\n    setShow(false);\n  };\n\n  // console.log(charactersCount);\n\n  console.log(show);\n  console.log(show2);\n\n  return (\n    <div ref={bodyRef} className='Container'>\n      <nav>\n        <Dropdown>\n          <Dropdown.Toggle\n            disabled={show === true || show2 === true ? true : false}\n            variant='danger'\n            id='dropdown-basic'\n          >\n            Find {charactersCount.length}\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item href='#/action-1'>\n              <img src='https://www.seekpng.com/png/full/766-7660020_stewie-stewie-griffin.png' />\n              Stewie Griffin\n            </Dropdown.Item>\n            <Dropdown.Item href='#/action-2'>\n              <img src='https://www.pngkey.com/png/full/266-2660354_neo-neo-matrix.png' />\n              Neo\n            </Dropdown.Item>\n            <Dropdown.Item href='#/action-3'>\n              <img src='https://www.nicepng.com/png/full/139-1394970_ash-ketchum-png-photo-original-ash-ketchum.png' />\n              Ash Ketchum\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <div className='timer'>\n          <h2>{hours < 10 ? \"0\" + hours + \":\" : hours + \":\"}</h2>\n          <h2>{minutes < 10 ? \"0\" + minutes + \":\" : minutes + \":\"}</h2>\n          <h2>{seconds < 10 ? \"0\" + seconds : seconds}</h2>\n        </div>\n      </nav>\n\n      {show2 && foundAll()}\n\n      <div\n        style={show ? { display: \"block\" } : { display: \"none\" }}\n        className='modal'\n      >\n        <div className='modal-content'>\n          <h1>Find Game</h1>\n          <div>\n            <img src='https://www.seekpng.com/png/full/766-7660020_stewie-stewie-griffin.png' />\n            <p>Stewie Griffin</p>\n          </div>\n          <div>\n            <img src='https://www.pngkey.com/png/full/266-2660354_neo-neo-matrix.png' />\n            <p>Neo</p>\n          </div>\n          <div>\n            <img src='https://www.nicepng.com/png/full/139-1394970_ash-ketchum-png-photo-original-ash-ketchum.png' />\n            <p>Ash Ketchum</p>\n          </div>\n          <button onClick={startGame}>Start Game</button>\n        </div>\n      </div>\n\n      <img\n        ref={myRef}\n        onClick={(e) => imageClick(e)}\n        className='picture'\n        src={data.pictures && data.pictures[0]}\n        alt='no pic'\n      ></img>\n    </div>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}